# This GitHub Action performs the following steps:
# - Updating the NPM version
# - Updating package.json in repo
# - Building new Docker image
# - Pushing image to Docker Hub
# - Committing new version to repo
# - Make GH release
#
# Prerequisites
# - Github secrets:
#   - DOCKERHUB_USERNAME and DOCKERHUB_TOKEN for publishing image to Docker Hub
#   - AUTH_TOKEN with write permissions on repo, to push the changed package.json, as main is a protected branch
name: Release and build new version
on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Type of release (major|minor|patch)'
        required: true
        default: 'patch'

env:
  DOCKERHUB_NAMESPACE: sensrnetnl
  REPOSITORY: registry-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump-version.outputs.version }}
    steps:
    # Check out the code
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v1
      with:
        node-version: 12

    # Bump the version, https://github.com/marketplace/actions/setup-node-js-environment
    - name: Bump npm version
      id: bump-version
      env:
        TYPE: ${{ INPUT_RELEASETYPE }}
      run: |
        npm version $TYPE --no-git-tag-version
        VERSION=$(node -pe "require('./package.json').version")
        echo "$VERSION" > VERSION
        echo "::set-output name=version::${VERSION}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ DOCKERHUB_NAMESPACE }}/${{ REPOSITORY }}:${{ steps.bump-version.outputs.version }}

    # https://github.com/marketplace/actions/add-commit
    - name: Add and commit changes
      uses: EndBug/add-and-commit@v4
      env:
        GITHUB_TOKEN: ${{ secrets.AUTH_TOKEN }} # Use administrator personal access token for pushing to protected branch
      with:
        message: 'Release v${{ steps.bump-version.outputs.version }}'

    # https://github.com/marketplace/actions/create-a-release
    - name: Create Github release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.AUTH_TOKEN }}
      with:
        tag_name: ${{ steps.bump-version.outputs.version }}
        release_name: Release v${{ steps.bump-version.outputs.version }}
